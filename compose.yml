services: 
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    networks:
      - crmnet
    expose:
      - 8088
    ports:
      - "0.0.0.0:8088:80"
      - "0.0.0.0:443:443"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - static-data:/app/www/crm/static
    depends_on:
      - crm

  db:
    image: postgres:17-alpine
    container_name: db
    environment:
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    volumes:
      - db-data:/var/lib/postgresql/data
      
    networks:
      - crmnet

  adminer:
    image: adminer
    container_name: adminer
    ports:
      - "0.0.0.0:8080:8080"
    links:
      - "db:db"
    networks:
      - crmnet
    depends_on:
      - db

  crm:
    build: ./crm
    image: paralexilse/crm
    container_name: flask-crm
    restart: always
    env_file:
      - .env
    networks:
      - crmnet
    links:
      - "db:dbps"
    ports:
      - "8000:8000"
      - "5000:5000"
    volumes:
      - static-data:/app/www/crm/static
    depends_on:
      - db

  prometheus:
    image: prom/prometheus
    ports: 
      - "9099:9090"
    volumes: 
      - prometheus-data:/etc/prometheus
    networks:
      - crmnet
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    restart: always
    
  
  grafana:
    image: grafana/grafana
    ports: 
      - "3003:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - crmnet
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    restart: always
  
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    ports:
      - "9187:9187"
    networks:
      - crmnet
    environment:
      DATA_SOURCE_NAME: "postgresql://${DATABASE_USERNAME}:${DATABASE_PASSWORD}@db:5432/postgres?sslmode=disable"   
  
  nginx-exporter:
    image: nginx/nginx-prometheus-exporter
    ports:
      - "9113:9113"
    networks:
      - crmnet
    command:  
      - '-nginx.scrape-uri=http://nginx:8089/stub_status'
    
networks:
  crmnet:
    driver: bridge
volumes:
  db-data:
  static-data:
  prometheus-data:
  grafana-data:

    # docker run -d --name db --network crmnet -e POSTGRES_DB=mydata -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=565441 -v db-data:/var/lib/postgresql/data postgres:17-alpine